name: ü§ñ Agendador Di√°rio de Transa√ß√µes Recorrentes

on:
  # Executa todos os dias √†s 9:00 UTC (6:00 AM no Brasil)
  schedule:
    - cron: '0 9 * * *'
  
  # Permite execu√ß√£o manual
  workflow_dispatch:
    inputs:
      processar_dias_anteriores:
        description: 'Processar tamb√©m N dias anteriores'
        required: false
        default: '0'
        type: choice
        options:
          - '0'
          - '1'
          - '2'
          - '3'
          - '7'

jobs:
  executar-agendador:
    runs-on: ubuntu-latest
    name: üîÑ Processar Transa√ß√µes Recorrentes
    
    steps:
    - name: üìã Checkout do c√≥digo
      uses: actions/checkout@v4
    
    - name: üêç Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: üì¶ Instalar depend√™ncias
      run: |
        cd backend
        pip install -r requirements.txt
    
    - name: üîß Configurar vari√°veis de ambiente
      run: |
        echo "AZURE_POSTGRESQL_HOST=${{ secrets.AZURE_POSTGRESQL_HOST }}" >> $GITHUB_ENV
        echo "AZURE_POSTGRESQL_USERNAME=${{ secrets.AZURE_POSTGRESQL_USERNAME }}" >> $GITHUB_ENV
        echo "AZURE_POSTGRESQL_PASSWORD=${{ secrets.AZURE_POSTGRESQL_PASSWORD }}" >> $GITHUB_ENV
        echo "AZURE_POSTGRESQL_DATABASE=${{ secrets.AZURE_POSTGRESQL_DATABASE }}" >> $GITHUB_ENV
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
        echo "ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}" >> $GITHUB_ENV
        echo "ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}" >> $GITHUB_ENV
    
    - name: üîç Debug Vari√°veis (sem mostrar senha)
      run: |
        echo "Host: ${{ secrets.AZURE_POSTGRESQL_HOST }}"
        echo "Username: ${{ secrets.AZURE_POSTGRESQL_USERNAME }}"
        echo "Database: ${{ secrets.AZURE_POSTGRESQL_DATABASE }}"
        echo "Password set: ${{ secrets.AZURE_POSTGRESQL_PASSWORD != '' }}"
    
    - name: ü§ñ Executar Agendador
      run: |
        cd backend
        python scripts/cron_agendador.py
      env:
        PYTHONPATH: .
        AZURE_POSTGRESQL_HOST: ${{ secrets.AZURE_POSTGRESQL_HOST }}
        AZURE_POSTGRESQL_USERNAME: ${{ secrets.AZURE_POSTGRESQL_USERNAME }}
        AZURE_POSTGRESQL_PASSWORD: ${{ secrets.AZURE_POSTGRESQL_PASSWORD }}
        AZURE_POSTGRESQL_DATABASE: ${{ secrets.AZURE_POSTGRESQL_DATABASE }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
        ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
    
    - name: üìä Relat√≥rio de Execu√ß√£o
      if: always()
      run: |
        echo "üéØ Agendador executado via GitHub Actions"
        echo "üìÖ Data: $(date)"
        echo "‚úÖ Verifique os logs acima para detalhes"

  notificar-resultado:
    needs: executar-agendador
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: üì¢ Notificar resultado
      run: |
        if [ "${{ needs.executar-agendador.result }}" = "success" ]; then
          echo "‚úÖ Agendador executado com sucesso!"
          echo "üéâ Transa√ß√µes recorrentes processadas automaticamente"
        else
          echo "‚ùå Falha na execu√ß√£o do agendador"
          echo "üîç Verifique os logs para mais detalhes"
        fi 