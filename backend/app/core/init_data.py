"""
M√≥dulo para inicializa√ß√£o de dados b√°sicos da aplica√ß√£o
"""
from sqlalchemy.orm import Session
from ..models.financial import Categoria
from ..models.user import Tenant
import logging

logger = logging.getLogger(__name__)

def create_default_categories(db: Session, tenant_id: int = None) -> None:
    """Criar categorias padr√£o para o sistema"""
    
    default_categories = [
        {"nome": "Alimenta√ß√£o", "cor": "#FF6B6B", "icone": "üçΩÔ∏è"},
        {"nome": "Transporte", "cor": "#4ECDC4", "icone": "üöó"},
        {"nome": "Moradia", "cor": "#45B7D1", "icone": "üè†"},
        {"nome": "Sa√∫de", "cor": "#96CEB4", "icone": "üè•"},
        {"nome": "Educa√ß√£o", "cor": "#FFEAA7", "icone": "üìö"},
        {"nome": "Lazer", "cor": "#DDA0DD", "icone": "üéÆ"},
        {"nome": "Vestu√°rio", "cor": "#98D8C8", "icone": "üëï"},
        {"nome": "Servi√ßos", "cor": "#F7DC6F", "icone": "üîß"},
        {"nome": "Investimentos", "cor": "#85C1E9", "icone": "üìà"},
        {"nome": "Outros", "cor": "#D5DBDB", "icone": "üì¶"},
        {"nome": "Sal√°rio", "cor": "#58D68D", "icone": "üí∞"},
        {"nome": "Freelance", "cor": "#F8C471", "icone": "üíº"},
        {"nome": "Vendas", "cor": "#BB8FCE", "icone": "üíµ"},
    ]
    
    try:
        # Create default tenant if none exists
        if not tenant_id:
            default_tenant = db.query(Tenant).first()
            if not default_tenant:
                default_tenant = Tenant(
                    name="Sistema",
                    subdomain="sistema",
                    is_active=True
                )
                db.add(default_tenant)
                db.commit()
                db.refresh(default_tenant)
            tenant_id = default_tenant.id
        
        # Check if categories already exist
        existing_categories = db.query(Categoria).filter(Categoria.tenant_id == tenant_id).count()
        
        if existing_categories == 0:
            logger.info("Creating default categories...")
            
            for cat_data in default_categories:
                categoria = Categoria(
                    nome=cat_data["nome"],
                    cor=cat_data["cor"],
                    icone=cat_data["icone"],
                    tenant_id=tenant_id
                )
                db.add(categoria)
            
            db.commit()
            logger.info(f"‚úÖ Created {len(default_categories)} default categories")
        else:
            logger.info("‚úÖ Categories already exist, skipping creation")
            
    except Exception as e:
        logger.error(f"‚ùå Error creating default categories: {e}")
        db.rollback()

def initialize_basic_data(db: Session) -> None:
    """Inicializar todos os dados b√°sicos necess√°rios"""
    try:
        create_default_categories(db)
        logger.info("‚úÖ Basic data initialization completed")
    except Exception as e:
        logger.error(f"‚ùå Basic data initialization failed: {e}") 